
.card {
    height: auto;
}
.card img,
.card svg {
    height: 100%; /* Make the image take up the full height */
    width: auto; /* Keep the aspect ratio */
    object-fit: cover; /* Make sure the image covers the div, or you can use 'contain' */
}

.viewButtonReact {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    visibility: hidden; /* Default hidden */
    background-color: white;
    width: 600px;
    height: 500px;
    z-index: 1050; /* Higher than overlay */
    box-shadow: 4px 10px rgba(0, 0, 0, 0.25);
    border-radius: 8px;
    padding: 20px;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    gap: 20px;
}

.viewButtonReact img {
    height: 40%; /* 40% of the parent div's height */
    max-width: 90%; /* Ensures the image doesn't stretch beyond its natural width or the container width */
    object-fit: contain; /* Keeps the image's original aspect ratio and fits it within the dimensions */
    border-radius: 8px; /* Optional: Adds rounded corners */
    margin: 0 auto; /* Centers the image horizontally */
}

.viewButtonReact .buttons {
    width: 100%; /* Full container width */
    display: flex;
    justify-content: center; /* Center-aligns the button */
    position: absolute; /* Positions the button relative to the parent */
    bottom: 20px; /* Distance from the bottom of the container */
}
.viewButtonReact .buttons button {
    padding: 10px 20px;
    font-size: 1rem;
    background-color: #007bff; /* Blue button */
    color: white;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.viewButtonReact .buttons button:hover {
    background-color: #0056b3; /* Darker blue on hover */
}

.viewButtonReact h5,
.viewButtonReact p {
    text-align: center; /* Centers the text */
    margin: 0; /* Removes default margins for a cleaner look */
}

.viewButtonReact h5 {
    font-size: 1.25rem; /* Slightly larger font for the title */
    font-weight: bold; /* Makes the title stand out */
}

.viewButtonReact p {
    font-size: 1rem; /* Standard font size for paragraphs */
    color: #555; /* Softer text color */
}
.viewButtonReact.active {
    visibility: visible; /* Make visible */
    opacity: 1; /* Optional: Smooth appearance */
    transition: opacity 0.3s ease-in-out; /* Smooth transition for visibility */
}

.overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 1040; /* Lower than popup */
    visibility: hidden;
    opacity: 0; /* Hidden by default */
    transition: opacity 0.3s ease-in-out; /* Smooth transition */
}

.overlay.active {
    visibility: visible; /* Make it visible */
    opacity: 1; /* Fully visible */
}

#addOverlay .viewButtonReact,
#editOverlay .viewButtonReact {
    padding: 20px;
    gap: 10px;
}

#addOverlay  input,
#editOverlay input {
    width: 100%;
    padding: 8px;
    margin-bottom: 10px;
    border: 1px solid #ccc;
    border-radius: 4px;
}

#addOverlay form,
#editOverlay form {
    display: flex;
    flex-wrap: wrap; /* Allows wrapping to the next row */
    gap: 20px; /* Adds spacing between inputs */
}

#addOverlay form .mb-3,
#editOverlay form .mb-3 {
    flex: 1 1 calc(50% - 20px); /* Each input takes 50% of the width minus gap */
    min-width: 200px; /* Ensure a minimum width for smaller screens */
}

#addOverlay  .buttons,
#editOverlay .buttons {
    display: flex; /* Use flexbox to align buttons */
    justify-content: center; /* Center the buttons in the container */
    gap: 20px; /* Add spacing between the buttons */
    margin-top: 20px; /* Add some space above the button row */
}

#addOverlay .buttons button,
#editOverlay .buttons button {
    padding: 10px 30px; /* Uniform button size */
    font-size: 1rem;
    background-color: #007bff; /* Blue color for buttons */
    color: white;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    transition: background-color 0.3s ease;
    width: 120px; /* Fixed button width for consistent size */
}

#addOverlay .buttons button:nth-child(2),
#editOverlay .buttons button:nth-child(2) { /* Cancel button styling */
    background-color: #dc3545; /* Red color for Cancel button */
}

#addOverlay .buttons button:nth-child(2):hover,
#editOverlay .buttons button:nth-child(2):hover {
    background-color: #a71d2a; /* Darker red on hover */
}

#addOverlay .buttons button:nth-child(1):hover,
#editOverlay .buttons button:nth-child(1):hover {
    background-color: #125ca8; /* Darker blue on hover */
}
#add,
#edit {
    height: 700px;
}

/* Style for Delete Button */
.delete-button {
    position: absolute; /* Positioned relative to the card */
    top: 10px; /* Slightly away from the top */
    right: 10px; /* Slightly away from the right */
    background-color: red; /* Red background */
    color: white; /* White emoji or text */
    border: none; /* Remove default border */
    border-radius: 50%; /* Make it circular */
    padding: 8px; /* Size of the button */
    font-size: 1.2rem; /* Size of the emoji or text */
    cursor: pointer; /* Pointer cursor for interaction */
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Optional: Add a shadow for aesthetics */
    z-index: 10; /* Ensure it appears above the image */
    display: flex; /* Align content in the center */
    justify-content: center;
    align-items: center;
    width: 40px;
    height: 40px;
}

.delete-button:hover {
    background-color: #a71d2a; /* Darker red for hover */
}

.card-img-top {
    width: auto; /* Let the image's width adapt naturally */
    height: auto; /* Maintain the original aspect ratio */
    max-width: 100%; /* Prevent the image from exceeding the card width */
    max-height: 225px; /* Limit the height to ensure it fits within the card */
    display: block; /* Center the image inside the card */
    margin: 0 auto; /* Horizontally center the image */
    object-fit: contain; /* Ensure the entire image is visible without cropping */
}
#deleteDecisionOverlay .buttons {
    display: flex;
    justify-content: center;
    gap: 20px;
    margin-top: 20px;
}

#deleteDecisionOverlay .buttons button {
    padding: 10px 30px;
    font-size: 1rem;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    transition: background-color 0.3s ease;
    width: 150px;
}

#deleteDecisionOverlay .buttons button:nth-child(1) { /* Confirm button */
    background-color: #dc3545; /* Red for danger */
    color: white;
}

#deleteDecisionOverlay .buttons button:nth-child(1):hover {
    background-color: #a71d2a;
}

#deleteDecisionOverlay .buttons button:nth-child(2) { /* Cancel button */
    background-color: #6c757d; /* Gray for cancel */
    color: white;
}

#deleteDecisionOverlay .buttons button:nth-child(2):hover {
    background-color: #5a6268;
}
#deleteDecisionOverlay .viewButtonReact {
    width: 300px; /* Narrower width for delete popup */
    height: 150px; /* Adjust dynamically based on content */
    padding: 20px; /* Adequate padding */
    gap: 15px; /* Adds spacing between elements */
    display: flex;
    flex-direction: column; /* Ensures vertical alignment of text and buttons */
    justify-content: space-between; /* Distribute elements, keeping buttons at the bottom */
    align-items: center; /* Center align content horizontally */
    box-sizing: border-box; /* Include padding in total height/width */
}

#deleteDecisionOverlay .viewButtonReact h5{
    text-align: center; /* Centers the text */
    margin: 0 0 10px; /* Adds margin below the text */
    word-wrap: break-word; /* Prevents text overflow */
}

#deleteDecisionOverlay .buttons {
    width: 100%; /* Buttons span full container width */
    display: flex; /* Flex container for buttons */
    justify-content: center; /* Center buttons horizontally */
    gap: 10px; /* Smaller gap between buttons */
    margin-top: 40px; /* Add space above buttons */
    padding-top: 10px; /* Add padding for separation from text */
}

#deleteDecisionOverlay .buttons button {
    padding: 8px 20px; /* Smaller button size */
    font-size: 0.85rem; /* Slightly smaller font size */
    border: none; /* Remove border */
    border-radius: 6px; /* Subtle rounded corners */
    cursor: pointer;
    transition: background-color 0.3s ease;
    width: 100px; /* Smaller button width */
}
/* Style for Accordion Header */
.accordion-header {
    /*background: linear-gradient(135deg, #ff7f50, #ff6347); !* Gradient background *!*/
    background-color: #F5F5DC;
    border-radius: 8px; /* Rounded corners */
    margin-bottom: 5px; /* Space between headers */
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Light shadow for depth */
    padding: 10px; /* Padding for some space around text */
}

/* Style for Accordion Button */
.accordion-button {
    background-color: transparent; /* Transparent background to show gradient */
    /*color: #fff; !* White text color *!*/
    color: #800000;
    font-size: 1.2rem; /* Slightly larger font size */
    font-weight: 500; /* Medium weight for text */
    border: none; /* Remove default border */
    border-radius: 5px; /* Rounded corners for button */
    padding: 10px 20px; /* Padding for more space */
    transition: all 0.3s ease; /* Smooth transition on hover */
}

/* Hover effect on Accordion Button */
.accordion-button:hover {
    background-color: rgba(255, 255, 255, 0.2); /* Slightly darken on hover */
    transform: scale(1.05); /* Slightly enlarge on hover */
}

/* Style for Accordion Button Text */
.accordion-button span {
    font-size: 1.25rem; /* Increase font size for better readability */
    font-weight: 600; /* Make the wine type bold */
    letter-spacing: 1px; /* Add some spacing between letters */
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2); /* Subtle text shadow */
}

/* Adjust collapse content when open */
.accordion-collapse.show {
    transition: all 0.3s ease; /* Smooth transition for content */
    padding: 20px; /* Add padding when open */
}

/* Focus effect on Accordion Button (when clicked or focused) */
.accordion-button:focus {
    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25); /* Blue focus outline */
    border-color: #007bff; /* Blue border on focus */
}
#ratingOverlay .viewButtonReact {
    padding: 20px;
    gap: 10px;
    justify-content: center; /* Center the rating stars */
}

.stars {
    display: flex; /* Use flexbox for precise alignment */
    gap: 0; /* Explicitly set no gap between items */
}

.stars span {
    margin: 0;
    padding: 0;
    display: inline-block; /* Ensures the span elements are displayed on the same line */
    vertical-align: middle; /* Adjusts vertical alignment */
}

#ratingOverlay .stars .star {
    color: #ccc; /* Default star color */
    transition: color 0.3s ease;
}

#ratingOverlay .stars .star:hover,
#ratingOverlay .stars .star:hover ~ .star {
    color: gold; /* Highlight stars on hover */
}

#ratingPopUp {
    width: auto; /* Ensure it takes full width within the parent */
    min-width: 200px;
    height: auto;
}

#ratingPopUp div #viewRatingDiv {
    position: relative; /* Ensure the button is positioned relative to the parent div */
    padding-bottom: 60px; /* Add padding to ensure the button doesn't overlap the content */
}
#lastInformationParagraph {
    padding-bottom: 60px;
}
#ratingPopUp .cancel-button-rating {
    position: absolute;
    bottom: 20px; /* Position at the bottom of the parent div */
    left: 50%; /* Center horizontally */
    transform: translateX(-50%); /* Fine-tune horizontal centering */
    background-color: #007bff; /* Button background color */
    color: white; /* Button text color */
    padding: 10px 20px;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    font-size: 1rem;
}

.checked { /*rating stars*/
    color: gold;
    padding-right: 0 !important;
    margin-right: 0 !important;
}
.stars span{
    margin: 0;
    padding: 0;
    display: inline-block; /* Ensures the span elements are displayed on the same line */
}
/* Ensure all form elements are block-level */
.form-group {
    width: 100%;
    margin-bottom: 15px; /* Adds space between form elements */
}

#ratingForm label {
    display: block; /* Makes the label appear on its own line */
    margin-bottom: 5px; /* Adds space between the label and input */
}

#ratingForm input, #ratingForm select {
    width: 100%; /* Ensures inputs and selects take full width */
    padding: 10px; /* Adds padding for better visual space */
    margin-bottom: 5px; /* Adds some space below inputs */
    border: 1px solid #ccc; /* Adds a border to inputs and selects */
    border-radius: 4px; /* Rounded corners */
}

#ratingForm button {
    padding: 10px 20px;
    font-size: 1rem;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    margin-top: 5px;
}

#ratingForm button:hover {
    background-color: #0056b3;
}
#ratingPopUp {
    height: auto;
}

